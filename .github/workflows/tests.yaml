name: Unit tests

permissions: read-all

on:
  push:
    branches:
      - master
    tags:
      - "**"
  schedule:
    - cron: "0 0 * * SUN"
  pull_request:

jobs:
  lint:
    name: Run pre-commit hooks
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Check copyright
        run: scripts/copyright.sh
      - name: Install pre-commit
        run: pip install pre-commit
      - name: Cache pre-commit environment
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            pre-commit-${{ runner.os }}-${{ matrix.python-version }}-
      - name: Generate version file
        run: |
          cat <<EOF > myhoard/version.py
          __version__ = version = '0.0.0'
          __version_tuple__ = version_tuple = (0, 0, 0)
          EOF
      - name: Run pre-commit
        run: pre-commit run --all-files

  unittest:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      # this isn't a standard matrix because some version testing doesn't make sense
      # e.g. you cannot use mysql .28 with percona .27, and there's no clean way of
      # skipping matrix items that aren't meaningful
      matrix:
        include:
          - mysql-version: "8.0.32"
            percona-version: "8.0.32-26-1.jammy"
            python-version: "3.11"
          - mysql-version: "8.0.35"
            percona-version: "8.0.35-32-1.jammy"
            python-version: "3.11"
          - mysql-version: "8.0.35"
            percona-version: "8.0.35-32-1.jammy"
            python-version: "3.12"

    steps:
      - id: checkout-code
        uses: actions/checkout@v4
      - name: Cache APT Packages
        uses: awalsh128/cache-apt-pkgs-action@v1.1.2
        with:
          version: 1.0
          packages: sudo lsb-release wget tzdata libsnappy-dev libpq5 libpq-dev software-properties-common build-essential rsync curl git libaio1 libmecab2 psmisc
      - id: prepare-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            **/requirements.txt
            **/requirements.dev.txt

      - run: make clean
      - run: sudo scripts/remove-default-mysql
      - run: sudo scripts/install-mysql-packages ${{matrix.mysql-version}}
      - run: sudo scripts/setup-percona-repo
      - run: sudo scripts/install-percona-package ${{matrix.percona-version}}
      - run: scripts/install-python-deps
      - run: python -m pip install -e .

      - id: unittest
        run: |
          make coverage

      - id: upload-codecov
        uses: codecov/codecov-action@v3
        with:
          verbose: true
