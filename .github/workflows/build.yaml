name: Build MyHoard

on:
  push:
    branches:
      - master
    tags:
      - '**'
  pull_request:

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ghcr.io/myhoard
          tags: type=sha,format=long,prefix=

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: build-image
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  lint:
    if: false
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # only use one version for the lint step
        python-version: [3.6]
    env:
      MYSQL_VERSION: mysql-8.0

    steps:

      - id: checkout-code
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - id: prepare-python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - id: mysql-repos
        run: |
          wget -c 'https://repo.mysql.com/mysql-apt-config_0.8.22-1_all.deb'
          echo "mysql-apt-config mysql-apt-config/select-server select $MYSQL_VERSION" | sudo debconf-set-selections
          echo "mysql-apt-config mysql-apt-config/select-tools select Enabled" | sudo debconf-set-selections
          echo "mysql-apt-config mysql-apt-config/select-product select Ok" | sudo debconf-set-selections
          echo "mysql-apt-config mysql-apt-config/tools-component string mysql-tools" | sudo debconf-set-selections
          sudo dpkg -i mysql-apt-config_0.8.22-1_all.deb

      - id: percona-tools
        run: |
          wget https://repo.percona.com/apt/percona-release_latest.$(lsb_release -sc)_all.deb
          sudo dpkg -i percona-release_latest.$(lsb_release -sc)_all.deb
          sudo percona-release enable-only tools
          sudo apt update

      - id: build-deps
        run: |
          sudo apt install -y libsnappy-dev
          sudo apt-get install -q -y --allow-unauthenticated -o Dpkg::Options::=--force-confnew mysql-server percona-xtrabackup-80
          mysqld --version

      - id: python-deps
        run: |
          pip install -r requirements.txt
          pip install -r requirements.dev.txt
          pip install -e .

      - id: fmt
        continue-on-error: true
        run: |
          make fmt
          if [ $(git diff --name-only --diff-filter=ACMR | wc -l ) != 0 ]; then
          echo "Reformatting failed! Please run make fmt on your commits and resubmit!" 1>&2 ;
          git diff ;
          exit 1 ;
          fi

      - id: typecheck
        continue-on-error: true
        run: make typecheck

      - id: copyright
        run: make copyright

      - id: lint
        run: make lint


  unittest:
    runs-on: ubuntu-latest
    container: 
      image: ghcr.io/myhoard:${{ github.sha }}
    strategy:
      # this isn't a standard matrix because some version testing doesn't make sense
      # e.g. you cannot use mysql .28 with percona .27, and there's no clean way of
      # skipping matrix items that aren't meaningful
      matrix:
        include:
          - mysql-version: "8.0.26"
            percona-version: "8.0.26-18-1.focal"
            python-version: "3.8"
          - mysql-version: "8.0.26"
            percona-version: "8.0.27-19-1.focal"
            python-version: "3.8"
          - mysql-version: "8.0.26"
            percona-version: "8.0.28-20-1.focal"
            python-version: "3.8"
          - mysql-version: "8.0.27"
            percona-version: "8.0.27-19-1.focal"
            python-version: "3.8"
          - mysql-version: "8.0.27"
            percona-version: "8.0.28-20-1.focal"
            python-version: "3.8"
          - mysql-version: "8.0.28"
            percona-version: "8.0.28-20-1.focal"
            python-version: "3.8"

    steps:

      - id: checkout-code
        uses: actions/checkout@v2

      - id: prepare-python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - id: install-ubuntu
        run: make MYSQL_VERSION=${{ matrix.mysql-version }} PYTHON_VERSION=${{matrix.python-version}} PERCONA_VERSION=${{matrix.percona-version}} install-ubuntu

      - id: unittest
        run: |
          sudo -u testme make PYTHON=python${{matrix.python-version}} coverage

      - id: upload-codecov
        uses: codecov/codecov-action@v2
        with:
          verbose: true
